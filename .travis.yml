dist: focal

arch:
  - amd64

services:
  - docker

os: linux

language: php

php:
  - 8.0

env:
  - RUNTIME=node-17.0
    PHP_CLASS=Node170
    ENTRYPOINT=tests.js
    IMAGE=openruntimes/node:17.0
  - RUNTIME=deno-1.14
    PHP_CLASS=Deno114
    ENTRYPOINT=tests.ts
    IMAGE=openruntimes/deno:1.14
  - RUNTIME=python-3.10
    PHP_CLASS=Python310
    ENTRYPOINT=tests.py
    IMAGE=openruntimes/python:3.10
  - RUNTIME=dart-2.15
    PHP_CLASS=Dart215
    ENTRYPOINT=tests.dart
    IMAGE=openruntimes/dart:2.15
  - RUNTIME=ruby-3.1
    PHP_CLASS=Ruby31
    ENTRYPOINT=tests.rb
    IMAGE=openruntimes/ruby:3.1
  - RUNTIME=php-8.0
    PHP_CLASS=PHP80
    ENTRYPOINT=tests.php
    IMAGE=openruntimes/php:8.0

notifications:
  email:
    - team@appwrite.io

before_install:
  - curl -fsSL https://get.docker.com | sh
  - echo '{"experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
  - mkdir -p $HOME/.docker
  - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
  - sudo service docker start
  - >
    if [ ! -z "${DOCKERHUB_PULL_USERNAME:-}" ]; then
      echo "${DOCKERHUB_PULL_PASSWORD}" | docker login --username "${DOCKERHUB_PULL_USERNAME}" --password-stdin
    fi
  - docker --version
  - docker run --rm --privileged linuxkit/binfmt:v0.8
  - docker buildx create --use

install:
  - docker --version
  - composer install

script:
  - export RUNTIME=${RUNTIME}; export PHP_CLASS=${PHP_CLASS}; export ENTRYPOINT=${ENTRYPOINT}; sh tests.sh
  - export RUNTIME=${RUNTIME}; export IMAGE=${IMAGE};sh deploy.sh

deploy:
  - provider: script
    edge: true
    script: export RUNTIME=${RUNTIME}; export IMAGE=${IMAGE};sh ./runtimes/deploy.sh
    on:
      tags: true